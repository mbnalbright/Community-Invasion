taxa_weak_pipeline <- function() {
  
  #go to working folder on the computer
  setwd("~/Desktop/mBio_script/")
  #input packages 
  library(vegan)
  
  #read in the data, complete OTU table with samples as rows and OTUs as columns
  #The OTU table- 97% identity OTUS, UPARSE, with singletons removed 
  #infile1<-"FUN_OTU.csv"
  infile1<- "BAC_OTU.csv"
  OTU_table<- read.table(infile1, header=T, sep=",", row.name=1)
  
  #remove samples that are less than rarefaction number that is chosen in the step below
  
  OTU_table$Total <- rowSums(OTU_table)
  
  OTU_subset <- subset(OTU_table, (Total > 10000))
  
  #remove sums column before rarefaction
  OTU_subset$Total <- NULL
  
  #rarefy the data- eventually this needs to be done many times to create many tables to process separately
  rarefied_OTU_matrix=rrarefy(OTU_subset,10000)
  
  #Change from a matrix to a datatable format
  rarefied_OTU_table <- as.data.frame(rarefied_OTU_matrix, header=T)
  
  #read in metadata
  #infile2<- "Fun_Metadata.csv"
  infile2<- "Bac_Metadata.csv"
  Bac_metadata<- read.table(infile2, header=T, sep=",", row.name=1)
  
  #merge OTU table and metadata by row.names
  merged.OTU_metadata <- merge(rarefied_OTU_table,Bac_metadata,all.x=T,by='row.names')
  
  #Bring in Taxonomic id table for later
  TAXA<- read.table("BAC_taxa_list97.csv",header=T, sep=",")
  #Test if datamerging worked
  #write.csv(merged.OTU_metadata, "merge.data_test.csv")
  
  #subset merged.OTU_metadata by Environment, Invader, and Resident
  #question should I also subset by A, B, C, D ? test this later
  
  #Create A Unique invasion tables
  #12 tables that need to be created and input changed here
  
  #1
  UP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "U" | Invader_Type =="Killed" | Invader_Type == "None"))
  PP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="P") & (Invader_Type== "P"))
  UP_Litter_Final <- rbind(UP_Litter_OTU, PP_Litter_OTU)
  
  # change lable name
  
  Subset_Invasion <- UP_Litter_Final

  #For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
  Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
  Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)
  
  #copy this average type table for later
  Final_Average_Type <-Avg_Type
  
  #transpose
  PA_table <- t(Avg_Type)
  
  #Create a Presence/Absence dataframe
  Avg_Type[Avg_Type > 0] = 1
  
  #fix the rownames
  Avg_Type2 <- Avg_Type[,-1]
  rownames(Avg_Type2) <- Avg_Type[,1]
  
  #transpose
  PA_table <- t(Avg_Type2)
  # turn from numbers into a table
  PA_table2 <- as.data.frame(PA_table)
  
  
  #Logic statements to categorize each piece of the Venn Diagram
  PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
  PA_table2$IRF[PA_table2$IRF < 3] = 0
  PA_table2$IRF[PA_table2$IRF == 3] = 1
  
  PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
  PA_table2$IR[PA_table2$IR < 2] = 0
  PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
  PA_table2$IR[PA_table2$IR == 2] = 0
  
  
  PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
  PA_table2$INV[PA_table2$INV < 2] = 0
  PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
  PA_table2$INV[PA_table2$INV == 2] = 0
  
  PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
  PA_table2$RF[PA_table2$RF < 2] = 0
  PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
  PA_table2$RF[PA_table2$RF == 2] = 0
  
  PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
  PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
  PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)
  
  #Subset the table to get just the pieces of the Venn diagram
  
  PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]
  
  
# Get average number of OTUs per category in Final
  library(data.table)
  
  
  PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
  #remove all rows with 0
  PA_long2 <- PA_long[PA_long$value == 1,]
  
  #Take average table made earlier
  #fix rownames and transpose table
  Final_Average_Type2 <- Final_Average_Type[,-1]
  rownames(Final_Average_Type2) <- Final_Average_Type[,1]
  Avg_table_1 <- t(Final_Average_Type2)
  Avg_Table_Final <- as.data.frame(Avg_table_1)
  
  #Change format to merge
  Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")
  
  #Merge the average data with the type data for the OTUs
  Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)
  
  #subset this data by Invader (INV), Resident (RF)
  #switch this to I (Non-Invader), R, and IR (Non-Resilient)
  
colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC2_into_MC1_Litter"
R_subset_cast$Event <- "MC2_into_MC1_Litter"
IR_subset_cast$Event<- "MC2_into_MC1_Litter"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Categort
I_family_1 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_1 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_1 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#2 Category
DP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "D" | Invader_Type =="Killed" | Invader_Type == "None"))
PP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="P") & (Invader_Type== "P"))
DP_Litter_Final <- rbind(DP_Litter_OTU, PP_Litter_OTU)

# change lable name

Subset_Invasion <- DP_Litter_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
#IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
#IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
#IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
#IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
#IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC4_into_MC1_Litter"
R_subset_cast$Event <- "MC4_into_MC1_Litter"
#IR_subset_cast$Event<- "MC4_into_MC1_Litter"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
#IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Categort
I_family_2 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_2 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
#IR_family_2 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#3 Category
AP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "A" | Invader_Type =="Killed" | Invader_Type == "None"))
PP_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="P") & (Invader_Type== "P"))
AP_Litter_Final <- rbind(AP_Litter_OTU, PP_Litter_OTU)

# change lable name

Subset_Invasion <- AP_Litter_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC3_into_MC1_Litter"
R_subset_cast$Event <- "MC3_into_MC1_Litter"
IR_subset_cast$Event<- "MC3_into_MC1_Litter"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_3 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_3 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_3 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#4 Category
PU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "P" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="U") & (Invader_Type== "U"))
PU_Litter_Final <- rbind(PU_Litter_OTU, UU_Litter_OTU)

# change lable name

Subset_Invasion <- PU_Litter_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC1_into_MC2_Litter"
R_subset_cast$Event <- "MC1_into_MC2_Litter"
IR_subset_cast$Event<- "MC1_into_MC2_Litter"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_4 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_4 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_4 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#5 Category
DU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "D" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="U") & (Invader_Type== "U"))
DU_Litter_Final <- rbind(DU_Litter_OTU, UU_Litter_OTU)

# change lable name

Subset_Invasion <- DU_Litter_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))


#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)

#Add in a category column

I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1

#label event type

I_subset_cast$Event <- "MC4_into_MC2_Litter"
R_subset_cast$Event <- "MC4_into_MC2_Litter"

#merge with taxonomic identity table

I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_5 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_5 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#6 Category
AU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "A" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Litter_OTU <- subset(merged.OTU_metadata, (Environment == "Litter")  & (Resident_Type=="U") & (Invader_Type== "U"))
AU_Litter_Final <- rbind(AU_Litter_OTU, UU_Litter_OTU)

# change lable name

Subset_Invasion <- AU_Litter_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC3_into_MC2_Litter"
R_subset_cast$Event <- "MC3_into_MC2_Litter"
IR_subset_cast$Event<- "MC3_into_MC2_Litter"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category

I_family_6 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_6 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_6 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#merge 6 sets of invasions Litter

I_merge_ALL <- rbind(I_family_1, I_family_2,I_family_3, I_family_4, I_family_5, I_family_6)
R_merge_ALL <- rbind(R_family_1, R_family_2,R_family_3, R_family_4, R_family_5, R_family_6)
IR_merge_ALL <- rbind(IR_family_1,IR_family_3, IR_family_4, IR_family_6)

# aggreagate by family
I_family_merge <- ddply(I_merge_ALL, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))
R_family_merge <- ddply(R_merge_ALL, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))
IR_family_merge <- ddply(IR_merge_ALL, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))




#calculate a score count*abundance
I_family_merge$Score <- (I_family_merge$sum_Count2 * I_family_merge$sum_FDI2)
R_family_merge$Score <- (R_family_merge$sum_Count2 * R_family_merge$sum_FDI2)
IR_family_merge$Score <- (IR_family_merge$sum_Count2 * IR_family_merge$sum_FDI2)


#Subset less than Score of > 50
I_merge_ALL_Litter_50 <- subset(I_family_merge, Score >= 50)
R_merge_ALL_Litter_50 <- subset(R_family_merge, Score >= 50)
IR_merge_ALL_Litter_50 <- subset(IR_family_merge, Score >= 50)


#MEDIA section
#7
UP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "U" | Invader_Type =="Killed" | Invader_Type == "None"))
PP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="P") & (Invader_Type== "P"))
UP_Media_Final <- rbind(UP_Media_OTU, PP_Media_OTU)

# change lable name

Subset_Invasion <- UP_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets

I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)

I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC2_into_MC1_Media"
R_subset_cast$Event <- "MC2_into_MC1_Media"
IR_subset_cast$Event<- "MC2_into_MC1_Media"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Categort
I_family_7 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_7 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_7 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#8 Category
DP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "D" | Invader_Type =="Killed" | Invader_Type == "None"))
PP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="P") & (Invader_Type== "P"))
DP_Media_Final <- rbind(DP_Media_OTU, PP_Media_OTU)

# change lable name

Subset_Invasion <- DP_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC4_into_MC1_Media"
R_subset_cast$Event <- "MC4_into_MC1_Media"
IR_subset_cast$Event<- "MC4_into_MC1_Media"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Categort
I_family_8 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_8 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_8 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#9 Category
AP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="P" |Resident_Type=="None") &(Invader_Type == "A" | Invader_Type =="Killed" | Invader_Type == "None"))
PP_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="P") & (Invader_Type== "P"))
AP_Media_Final <- rbind(AP_Media_OTU, PP_Media_OTU)

# change lable name

Subset_Invasion <- AP_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets
I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)
I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1

I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC3_into_MC1_Media"
R_subset_cast$Event <- "MC3_into_MC1_Media"
IR_subset_cast$Event<- "MC3_into_MC1_Media"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_9 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_9 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_9 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#10 Category
PU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "P" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="U") & (Invader_Type== "U"))
PU_Media_Final <- rbind(PU_Media_OTU, UU_Media_OTU)

# change lable name

Subset_Invasion <- PU_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets

I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)

I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")

#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column

I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1

I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type

I_subset_cast$Event <- "MC1_into_MC2_Media"
R_subset_cast$Event <- "MC1_into_MC2_Media"
IR_subset_cast$Event<- "MC1_into_MC2_Media"

#merge with taxonomic identity table

I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_10 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_10 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_10 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#5 Category
DU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "D" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="U") & (Invader_Type== "U"))
DU_Media_Final <- rbind(DU_Media_OTU, UU_Media_OTU)

# change lable name

Subset_Invasion <- DU_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets

I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)

I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column

I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1

I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type

I_subset_cast$Event <- "MC4_into_MC2_Media"
R_subset_cast$Event <- "MC4_into_MC2_Media"
IR_subset_cast$Event<- "MC4_into_MC2_Media"

#merge with taxonomic identity table

I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_11 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_11 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_11 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))


#12 Category
AU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media") & (Resident_Type=="U" |Resident_Type=="None") &(Invader_Type == "A" | Invader_Type =="Killed" | Invader_Type == "None"))
UU_Media_OTU <- subset(merged.OTU_metadata, (Environment == "Media")  & (Resident_Type=="U") & (Invader_Type== "U"))
AU_Media_Final <- rbind(AU_Media_OTU, UU_Media_OTU)

# change lable name

Subset_Invasion <- AU_Media_Final

#For each table, get the average of groups (Invader_Inoculum, Resident_Control, Final_Invaded) for each OTU (column).
Col_number <- ncol(Subset_Invasion)-ncol(Bac_metadata)
Avg_Type <- aggregate(Subset_Invasion[, 2:Col_number], list(Subset_Invasion$Type), mean)

#copy this average type table for later
Final_Average_Type <-Avg_Type

#transpose
PA_table <- t(Avg_Type)

#Create a Presence/Absence dataframe
Avg_Type[Avg_Type > 0] = 1

#fix the rownames
Avg_Type2 <- Avg_Type[,-1]
rownames(Avg_Type2) <- Avg_Type[,1]

#transpose
PA_table <- t(Avg_Type2)
# turn from numbers into a table
PA_table2 <- as.data.frame(PA_table)


#Logic statements to categorize each piece of the Venn Diagram
PA_table2$IRF <- PA_table2$Final_Invaded + PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IRF[PA_table2$IRF < 3] = 0
PA_table2$IRF[PA_table2$IRF == 3] = 1

PA_table2$IR <- PA_table2$Invader_Inoculum + PA_table2$Resident_Control
PA_table2$IR[PA_table2$IR < 2] = 0
PA_table2$IR[PA_table2$IR == 2 & PA_table2$IRF < 1] = 1
PA_table2$IR[PA_table2$IR == 2] = 0


PA_table2$INV <- PA_table2$Invader_Inoculum + PA_table2$Final_Invaded
PA_table2$INV[PA_table2$INV < 2] = 0
PA_table2$INV[PA_table2$INV == 2 & PA_table2$IRF < 1] = 1
PA_table2$INV[PA_table2$INV == 2] = 0

PA_table2$RF <- PA_table2$Resident_Control+ PA_table2$Final_Invaded
PA_table2$RF[PA_table2$RF < 2] = 0
PA_table2$RF[PA_table2$RF == 2 & PA_table2$IRF < 1] = 1
PA_table2$RF[PA_table2$RF == 2] = 0

PA_table2$I <- as.numeric(PA_table2$Invader_Inoculum == 1 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==0)
PA_table2$R <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 1 & PA_table2$Final_Invaded ==0)
PA_table2$Fi <- as.numeric(PA_table2$Invader_Inoculum == 0 & PA_table2$Resident_Control == 0 & PA_table2$Final_Invaded ==1)

#Subset the table to get just the pieces of the Venn diagram

PA_Grouped <-PA_table2[, c("IRF","IR","INV","RF", "I", "R", "Fi")]


# Get average number of OTUs per category in Final
library(data.table)


PA_long <-melt(setDT(PA_Grouped, keep.rownames = TRUE), "rn")
#remove all rows with 0
PA_long2 <- PA_long[PA_long$value == 1,]

#Take average table made earlier
#fix rownames and transpose table
Final_Average_Type2 <- Final_Average_Type[,-1]
rownames(Final_Average_Type2) <- Final_Average_Type[,1]
Avg_table_1 <- t(Final_Average_Type2)
Avg_Table_Final <- as.data.frame(Avg_table_1)

#Change format to merge
Avg_long <-melt(setDT(Avg_Table_Final, keep.rownames = TRUE), "rn")

#Merge the average data with the type data for the OTUs
Merged_data_Avg <- merge(Avg_long, PA_long2, by="rn", all.y=T)

#subset this data by Invader (INV), Resident (RF)
#switch this to I (Non-Invader), R, and IR (Non-Resilient)

colnames(Merged_data_Avg)<- c("OTUid","Type","Average_Value", "Category", "Count")

Merged_data_Avg2 <- as.data.frame(Merged_data_Avg)

#subsets

I_subset <- subset(Merged_data_Avg2, (Category =="I"))
R_subset <- subset(Merged_data_Avg2, (Category =="R"))
IR_subset <- subset(Merged_data_Avg2, (Category =="IR"))

#Reformat to long from wide
library(reshape2)

I_subset_cast <- dcast(I_subset, OTUid ~ Type,value.var = "Average_Value") 
R_subset_cast <- dcast(R_subset, OTUid ~ Type,value.var = "Average_Value")
IR_subset_cast <- dcast(IR_subset, OTUid ~ Type,value.var = "Average_Value")


#Calculate OTU abundance
I_subset_cast$FDI <- (I_subset_cast$Invader_Inoculum)
R_subset_cast$FDI <- (R_subset_cast$Resident_Control)
IR_subset_cast$FDI <- (IR_subset_cast$Resident_Control + IR_subset_cast$Invader_Inoculum)

#Add in a category column
I_subset_cast$Class <- 'Non_Invasive'
R_subset_cast$Class <- 'Non_Resilient'
IR_subset_cast$Class <- 'Non_Resilient'

#Add count column with 1
I_subset_cast$Count <- 1
R_subset_cast$Count <- 1
IR_subset_cast$Count<- 1

#label event type
I_subset_cast$Event <- "MC3_into_MC2_Media"
R_subset_cast$Event <- "MC3_into_MC2_Media"
IR_subset_cast$Event<- "MC3_into_MC2_Media"

#merge with taxonomic identity table
I_subset_cast_taxa <-  merge(I_subset_cast, TAXA, by="OTUid", all.x=T)
R_subset_cast_taxa <-  merge(R_subset_cast, TAXA, by="OTUid", all.x=T)
IR_subset_cast_taxa<-  merge(IR_subset_cast, TAXA, by="OTUid", all.x=T)

# sum of all OTUs in a family
#import library to perform the next data processing step with ddply
library(plyr)

#Sum abundance of OTUs per Category
I_family_12 <- ddply(I_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
R_family_12 <- ddply(R_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))
IR_family_12 <- ddply(IR_subset_cast_taxa, c("family", "Class", "Event"), summarise, sum_FDI =sum(FDI), sum_Count=sum(Count))

#merge 6 sets of invasions Media

I_merge_ALLM <- rbind(I_family_7, I_family_8,I_family_9, I_family_10, I_family_11, I_family_12)
R_merge_ALLM <- rbind(R_family_7, R_family_8,R_family_9, R_family_10, R_family_11, R_family_12)
IR_merge_ALLM <- rbind(IR_family_7, IR_family_8,IR_family_9, IR_family_10, IR_family_11, IR_family_12)

# aggreagate by family
I_family_mergeM <- ddply(I_merge_ALLM, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))
R_family_mergeM <- ddply(R_merge_ALLM, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))
IR_family_mergeM <- ddply(IR_merge_ALLM, c("family", "Class"), summarise, sum_FDI2 =sum(sum_FDI), sum_Count2=sum(sum_Count))




#calculate a score count*abundance
I_family_mergeM$Score <- (I_family_mergeM$sum_Count2 * I_family_mergeM$sum_FDI2)
R_family_mergeM$Score <- (R_family_mergeM$sum_Count2 * R_family_mergeM$sum_FDI2)
IR_family_mergeM$Score <- (IR_family_mergeM$sum_Count2 * IR_family_mergeM$sum_FDI2)


#Subset less than Score of > 50
I_merge_ALL_Media_50 <- subset(I_family_mergeM, Score >= 50)
R_merge_ALL_Media_50 <- subset(R_family_mergeM, Score >= 50)
IR_merge_ALL_Media_50 <- subset(IR_family_mergeM, Score >= 50)


#Merge, Media and litter
I_ML_50 <- merge(I_merge_ALL_Litter_50, I_merge_ALL_Media_50, by= "family", all.x=T, all.y=T)
R_ML_50 <- merge(R_merge_ALL_Litter_50, R_merge_ALL_Media_50, by= "family", all.x=T, all.y=T)
IR_ML_50 <- merge(IR_merge_ALL_Litter_50, IR_merge_ALL_Media_50, by= "family", all.x=T, all.y=T)



#keep only families with data across both

I_ML_50_joint <- na.omit(I_ML_50)
R_ML_50_joint <- na.omit(R_ML_50)
IR_ML_50_joint <- na.omit(IR_ML_50)


#average scores across media and litter
I_ML_50_joint$avg_Score<- ((I_ML_50_joint$Score.x + I_ML_50_joint$Score.y)/2)
I_ML_50_joint$sqrt_avg_Score<- sqrt((I_ML_50_joint$Score.x + I_ML_50_joint$Score.y)/2)

R_ML_50_joint$avg_Score<- ((R_ML_50_joint$Score.x + R_ML_50_joint$Score.y)/2)
R_ML_50_joint$sqrt_avg_Score<- sqrt((R_ML_50_joint$Score.x + R_ML_50_joint$Score.y)/2)

IR_ML_50_joint$avg_Score<- ((IR_ML_50_joint$Score.x + IR_ML_50_joint$Score.y)/2)
IR_ML_50_joint$sqrt_avg_Score<- sqrt((IR_ML_50_joint$Score.x + IR_ML_50_joint$Score.y)/2)

#keep only 3 relevant columns

I_ML_50_FINAL <- data.frame(I_ML_50_joint$family,I_ML_50_joint$Class.x, I_ML_50_joint$sqrt_avg_Score)
R_ML_50_FINAL <- data.frame(R_ML_50_joint$family,R_ML_50_joint$Class.x, R_ML_50_joint$sqrt_avg_Score)
IR_ML_50_FINAL <- data.frame(IR_ML_50_joint$family,IR_ML_50_joint$Class.x, IR_ML_50_joint$sqrt_avg_Score)

colnames(I_ML_50_FINAL)<- c("Family","Class","Score")
colnames(R_ML_50_FINAL)<- c("Family","Class","Score")
colnames(IR_ML_50_FINAL)<- c("Family","Class","Score")


# Join I, R, IR

Weak_ML_50_FINAL <- merge(I_ML_50_FINAL, R_ML_50_FINAL, by= "Family", all.x=T, all.y=T)
Weak_ML_50_FINAL2 <- merge(Weak_ML_50_FINAL, IR_ML_50_FINAL, by= "Family", all.x=T, all.y=T)


Weak_ML_50_FINAL2$Class.z <- paste(Weak_ML_50_FINAL2$Class.x,Weak_ML_50_FINAL2$Class.y, Weak_ML_50_FINAL2$Class)
Weak_ML_50_FINAL2$Score.x[is.na(Weak_ML_50_FINAL2$Score.x)] <- 0 
Weak_ML_50_FINAL2$Score.y[is.na(Weak_ML_50_FINAL2$Score.y)] <- 0 
Weak_ML_50_FINAL2$Score[is.na(Weak_ML_50_FINAL2$Score)] <- 0 
Weak_ML_50_FINAL2$Score.z <- paste(Weak_ML_50_FINAL2$Score.x + Weak_ML_50_FINAL2$Score.y+ Weak_ML_50_FINAL2$Score)

Weak_ML_50_FINAL3 <- data.frame(Weak_ML_50_FINAL2$Family,Weak_ML_50_FINAL2$Class.z, Weak_ML_50_FINAL2$Score.z)
colnames(Weak_ML_50_FINAL3)<- c("Family","Class","Score")

#make a list
  
my_list <- list(Weak_ML_50_FINAL3)
                
  return (my_list)  
  
}
#end of 2nd loop
